name: CI/CD with Rollback

on:
  push:
    branches: ["main"]
  workflow_dispatch: # Permite ejecución manual

jobs:
  test: # Permite los test que esten disponibles
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.23.6" 
      - name: Run Tests
        run: |
          go test -v ./...
          go mod tidy

  deploy-staging:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install SSH Key
        uses: webfactory/ssh-agent@v0.7.0  # Mejor acción para manejo de claves
        with:
          ssh-private-key: ${{ secrets.STAGING_SSH_PRIVATE_KEY }}
      - name: Add to known hosts
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.STAGING_KNOWN_HOSTS }}" >> ~/.ssh/known_hosts
      - name: Deploy to Staging
        run: |
          ssh -vvv -o StrictHostKeyChecking=no ${{ secrets.STAGING_USER }}@${{ secrets.STAGING_HOST }} "
            cd /home/${{ secrets.STAGING_USER }}/Inventori_ecommerce && \
            git fetch origin main && \
            git reset --hard origin/main && \
            docker-compose -f docker-compose.dev.yml down && \
            docker-compose -f docker-compose.dev.yml up -d --build
          "

  approve-production:
    needs: deploy-staging
    runs-on: ubuntu-latest
    steps:
      - name: Wait for Approval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ secrets.APPROVAL_TOKEN }}
          approvers: "Juan-Barraza"
          prompt: "✅ Staging deployment complete. Approve production deployment?"

  deploy-production:
    needs: approve-production
    if: success() 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install SSH Key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.PROD_SSH_PRIVATE_KEY }}
      - name: Add to known hosts
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.PROD_KNOWN_HOSTS }}" >> ~/.ssh/known_hosts
      - name: Deploy to production
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.PROD_USER }}@${{ secrets.PROD_HOST }} "
            cd /home/${{ secrets.PROD_USER }}/Inventori_ecommerce && \
            git fetch origin main && \
            git reset --hard origin/main && \
            docker-compose -f docker-compose.prod.yml down && \
            docker-compose -f docker-compose.prod.yml up -d --build
          "
      - name: Verify deployment
        run: |
          ssh ${{ secrets.PROD_USER }}@${{ secrets.PROD_HOST }} "
            docker ps && \
            curl -sSf http://localhost:8080/healthcheck || exit 1
          "